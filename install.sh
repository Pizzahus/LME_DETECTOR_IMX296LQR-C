#!/bin/bash
set -e  # ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ error

USER_HOME="/home/$USER"
PROJECT_DIR="$USER_HOME/LME_DETECTOR_IMX296LQR-C"
TESSERACT_MODEL_SRC="$PROJECT_DIR/tesseract_model"
TESSERACT_MODEL_DST="/usr/share/tesseract-ocr/5/tessdata"
DESKTOP_FILE_SRC="$PROJECT_DIR/sys/LME_Detector.desktop"
DESKTOP_DIR="$USER_HOME/Desktop"
AUTOSTART_DIR="$USER_HOME/.config/autostart"

GITHUB_EMAIL="pizzahus5678@gmail.com"
GITHUB_USERNAME="Pizzahus"

echo "======================================"
echo "üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LME_DETECTOR_IMX296LQR-C"
echo "======================================"

# --- 1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô SD card ---
echo "üîç Checking available disk space..."
df -h /
FREE_SPACE=$(df --output=avail / | tail -n 1)
if [ "$FREE_SPACE" -lt 500000 ]; then
    echo "‚ùå ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 500MB)"
    exit 1
else
    echo "‚úÖ ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠"
fi

# --- 2Ô∏è‚É£ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ---
git config --global user.email "$GITHUB_EMAIL"
git config --global user.name "$GITHUB_USERNAME"
git config --list

echo "üì¶ Updating system and installing base packages..."
sudo apt update -y
sudo apt upgrade -y
sudo apt install -y tesseract-ocr
sudo apt install -y python3 python3-venv python3-pip git curl

# --- 3Ô∏è‚É£ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏• Tesseract ---
echo "üß† Copying custom Tesseract models..."
if [ -d "$TESSERACT_MODEL_SRC" ]; then
    sudo mkdir -p "$TESSERACT_MODEL_DST"
    sudo cp -v "$TESSERACT_MODEL_SRC"/* "$TESSERACT_MODEL_DST"/
    echo "‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏• Tesseract ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
else
    echo "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå $TESSERACT_MODEL_SRC ‚Äî ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ"
fi

# --- 4Ô∏è‚É£ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠ build ‡πÅ‡∏•‡∏∞ dependencies ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ---
echo "üîß Installing build tools and dependencies..."
sudo apt install -y \
    build-essential \
    cmake \
    ninja-build \
    autoconf \
    automake \
    libtool \
    pkg-config \
    python3-dev \
    libjpeg-dev \
    zlib1g-dev \
    libcamera-dev \
    libcap-dev
    # libatlas-base-dev \
    # libopenblas-dev \
    # libtiff5-dev

# --- 5Ô∏è‚É£ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á libcamera ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Raspberry Pi) ---
echo "üì∑ Installing libcamera utilities..."
sudo apt install -y \
    libcamera-apps \
    python3-picamera2

# --- 6Ô∏è‚É£ ‡∏™‡∏£‡πâ‡∏≤‡∏á Virtual Environment ---
echo "üêç Creating Python virtual environment..."
python3 -m venv --system-site-packages "$PROJECT_DIR/detection_venv"

# --- 7Ô∏è‚É£ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Virtual Environment ---
echo "‚öôÔ∏è Activating virtual environment..."
source "$PROJECT_DIR/detection_venv/bin/activate"

# --- 8Ô∏è‚É£ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï pip ‡πÅ‡∏•‡∏∞ wheel ---
echo "‚¨ÜÔ∏è Updating pip and wheel..."
pip install --upgrade pip setuptools wheel

# --- 9Ô∏è‚É£ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies ‡∏à‡∏≤‡∏Å requirements.txt ---
echo "üìö Installing Python dependencies..."
if [ -f "$PROJECT_DIR/requirements.txt" ]; then
    pip install --no-cache-dir -r "$PROJECT_DIR/requirements.txt"
else
    echo "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå requirements.txt ‚Äî ‡∏à‡∏∞‡∏Ç‡πâ‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ"
fi

# --- üîü ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á simplejpeg ‡πÅ‡∏¢‡∏Å (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£ build) ---
echo "üß© Installing simplejpeg (manual build fallback)..."
pip install --no-cache-dir simplejpeg || {
    echo "‚ö†Ô∏è simplejpeg build failed, retrying with source build..."
    pip install --no-binary :all: simplejpeg
}

# --- 11Ô∏è‚É£ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Desktop Shortcut ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Autostart ---
echo "üñ•Ô∏è Setting up Desktop shortcut and autostart..."
mkdir -p "$DESKTOP_DIR" "$AUTOSTART_DIR"
if [ -f "$DESKTOP_FILE_SRC" ]; then
    cp -v "$DESKTOP_FILE_SRC" "$DESKTOP_DIR/"
    chmod +x "$DESKTOP_DIR/LME_Detector.desktop"
    cp -v "$DESKTOP_FILE_SRC" "$AUTOSTART_DIR/"
    chmod +x "$AUTOSTART_DIR/LME_Detector.desktop"
    echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Desktop shortcut ‡πÅ‡∏•‡∏∞ autostart ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
else
    echo "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå $DESKTOP_FILE_SRC ‚Äî ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ"
fi

# --- ‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ---
echo "‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î!"
echo "--------------------------------------"
echo "üéØ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô environment ‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢:"
echo "cd $PROJECT_DIR"
echo "source detection_venv/bin/activate"
echo "python3 main.py"
echo "--------------------------------------"
